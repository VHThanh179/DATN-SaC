@page "/checkout"
@inject IJSRuntime JSRuntime
@inject Blazored.SessionStorage.ISyncSessionStorageService sessionStorage
@inject Microsoft.Extensions.Configuration.IConfiguration config
@inject NavigationManager navigationManager
@using Share.Models
@using Share.Models.ViewModels

<style>
    .my-custom-scrollbar {
        position: relative;
        height: 400px;
        overflow: auto;
    }

    .table-wrapper-scroll-y {
        display: block;
    }

    .payment-info {
        background: blue;
        padding: 10px;
        border-radius: 6px;
        color: #fff;
        font-weight: bold
    }

    .product-details {
        padding: 10px
    }

    body {
        background: #eee
    }

    .cart {
        background: #fff
    }

    .p-about {
        font-size: 12px
    }

    .table-shadow {
        -webkit-box-shadow: 5px 5px 15px -2px rgba(0, 0, 0, 0.42);
        box-shadow: 5px 5px 15px -2px rgba(0, 0, 0, 0.42)
    }

    .type {
        font-weight: 400;
        font-size: 10px
    }

    label.radio {
        cursor: pointer
    }

        label.radio input {
            position: absolute;
            top: 0;
            left: 0;
            visibility: hidden;
            pointer-events: none
        }

        label.radio span {
            padding: 1px 12px;
            border: 2px solid #ada9a9;
            display: inline-block;
            color: #8f37aa;
            border-radius: 3px;
            text-transform: uppercase;
            font-size: 11px;
            font-weight: 300
        }

        label.radio input:checked + span {
            border-color: #fff;
            background-color: blue;
            color: #fff
        }

    .credit-inputs {
        background: rgb(102, 102, 221);
        color: #fff !important;
        border-color: rgb(102, 102, 221)
    }

        .credit-inputs::placeholder {
            color: #fff;
            font-size: 13px
        }

    .credit-card-label {
        font-size: 9px;
        font-weight: 300
    }

    .form-control.credit-inputs:focus {
        background: rgb(102, 102, 221);
        border: rgb(102, 102, 221)
    }

    .line {
        border-bottom: 1px solid rgb(102, 102, 221)
    }

    .information span {
        font-size: 12px;
        font-weight: 500
    }

    .information {
        margin-bottom: 5px
    }

    .items {
        -webkit-box-shadow: 5px 5px 4px -1px rgba(0, 0, 0, 0.25);
        box-shadow: 5px 5px 4px -1px rgba(0, 0, 0, 0.08)
    }

    .spec {
        font-size: 11px
    }

    .button:focus {
        outline: none;
    }
</style>

<Animate Animation="Animations.FadeUp" Duration="TimeSpan.FromSeconds(1)">
    <div class="container p-3 rounded cart">
        <div class="row no-gutters">
            <div class="col-md-8">
                <div class="product-details mr-2">
                    <div class="d-flex justify-content-between">
                        <b>PHƯƠNG THỨC VẬN CHUYỂN - THANH TOÁN</b>
                    </div>
                    <hr>
                    <div class="table-wrapper-scroll-y my-custom-scrollbar">
                        <form class="col-11 m-auto">
                            <div class="row">
                                <div class="form-group col-6">
                                    <label class="control-label">Tên khách hàng</label>
                                    <input class="form-control" @bind="customer.FullName" />
                                </div>

                                <div class="form-group col-6">
                                    <label class="control-label">Địa chỉ giao hàng</label>
                                    <input class="form-control" />
                                </div>
                            </div>

                            <div class="row mt-2">
                                <div class="form-group col-6">
                                    <label class="control-label">Số điện thoại</label>
                                    <input class="form-control" @bind="customer.PhoneNumber" />
                                </div>

                                <div class="form-label-group col-6">
                                    <label class="control-label">Hình thức vận chuyển</label>
                                    <br />
                                    <select>
                                        <option value="">Trực tiếp</option>
                                        <option value="">Tận nhà</option>

                                    </select>

                                </div>
                            </div>
                            <div class="row mt-2">
                                <div class="form-group col-6">
                                    <label class="control-label">Giá vận chuyển</label>
                                    <input type="number" class="form-control" readonly />
                                </div>

                                <div class="form-label-group col-6">
                                    <label class="control-label">Đối tác vận chuyển</label>
                                    <br />
                                    <select>
                                        <option value="">Grab</option>
                                        <option value="">Now</option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group mt-2">
                                <label class="control-label">Ghi chú</label>
                                <textarea class="form-control" cols="30" rows="5" maxlength="200"></textarea>
                            </div>

                        </form>
                        
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="payment-info">
                    @*<div class="d-flex justify-content-between align-items-center"><span>Card details</span><img class="rounded" src="https://i.imgur.com/WU501C8.jpg" width="30"></div><span class="type d-block mt-3 mb-1">Card type</span><label class="radio"> <input type="radio" name="card" value="payment" checked> <span><img width="30" src="https://img.icons8.com/color/48/000000/mastercard.png" /></span> </label>
                    <label class="radio"> <input type="radio" name="card" value="payment"> <span><img width="30" src="https://img.icons8.com/officel/48/000000/visa.png" /></span> </label>
                    <label class="radio"> <input type="radio" name="card" value="payment"> <span><img width="30" src="https://img.icons8.com/ultraviolet/48/000000/amex.png" /></span> </label>
                    <label class="radio"> <input type="radio" name="card" value="payment"> <span><img width="30" src="https://img.icons8.com/officel/48/000000/paypal.png" /></span> </label>
                    <div><label class="credit-card-label">Name on card</label><input type="text" class="form-control credit-inputs" placeholder="Name" autofocus></div>
                    <div><label class="credit-card-label">Card number</label><input type="text" class="form-control credit-inputs" placeholder="0000 0000 0000 0000"></div>
                    <div class="row">
                        <div class="col-md-6"><label class="credit-card-label">Date</label><input type="text" class="form-control credit-inputs" placeholder="12/24"></div>
                        <div class="col-md-6"><label class="credit-card-label">CVV</label><input type="text" class="form-control credit-inputs" placeholder="342"></div>
                    </div>*@
                    <hr class="line">
                    <div class="d-flex justify-content-between information"><span>Tiền hàng</span><span>@orderCart.Total</span></div>
                    <div class="d-flex justify-content-between information"><span>Shipping</span><span>$20.00</span></div>
                    <div class="d-flex justify-content-between information"><span>Tổng cộng</span><span id="totalPrice">@orderCart.Total</span></div>
                    @*<button class="btn btn-primary btn-block d-flex justify-content-between mt-3" type="button"><span>Checkout<i class="fa fa-long-arrow-right ml-1"></i></span></button>*@     
                    <div id="paypal-button-container"></div>
                </div>
            </div>
            <div class="row">
                <div class="col-12 text-end">
                    <input type="button" class="ml-2 btn btn-dark" @onclick="@Cancel" value="Quay lại" />

                </div>
            </div>

        </div>
    </div>
</Animate>
@code {
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }
    public ShipInfo shipInfo;
    public Customer customer;
    public int cusId;
    public string emailAddress;
    public Cart orderCart;

    //protected override void OnInitialized()
    //{
    //}

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("PaypalButton");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        var cart = sessionStorage.GetItem<string>("cart");
        if (cart == null)
        {
            orderCart = new Share.Models.ViewModels.Cart();
        }
        else
        {
            orderCart = JsonConvert.DeserializeObject<Cart>(cart);
        }

        emailAddress = sessionStorage.GetItem<string>("Email");
        cusId = sessionStorage.GetItem<int>("customerId");
        var apiUrl = config.GetSection("API")["APIUrl"].ToString();
        var accessToken = sessionStorage.GetItem<string>("AccessToken");
        customer = new Customer();

        using (var client = new HttpClient())
        {
            client.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", accessToken);
            client.DefaultRequestHeaders.Add("Access-Control-Allow-Origin", "*");
            client.BaseAddress = new Uri(apiUrl);
            using (var response = await client.GetAsync("Customer/?id=" + cusId))
            {
                string apiResponse = await response.Content.ReadAsStringAsync();
                customer = JsonConvert.DeserializeObject<Customer>(apiResponse);
            }
        }

    }



    private void Cancel()
    {
        ModalInstance.CloseAsync(ModalResult.Ok<ShipInfo>(shipInfo));
    }
}
