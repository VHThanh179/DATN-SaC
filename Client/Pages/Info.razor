@page "/info/{id}"
@using System.Text.Json;
@using System.Text.Json.Serialization;
@using System.Net;
@using Newtonsoft.Json;
@using Share.Models;
@layout InnerPageLayout;
@inject NavigationManager NavigationManager
@inject Blazored.SessionStorage.ISyncSessionStorageService sessionStorage
@inject Microsoft.Extensions.Configuration.IConfiguration config;
@inject IJSRuntime JSRuntime
<style>
    :root {
        --input-padding-x: 1.5rem;
        --input-padding-y: .75rem;
    }

    .card-signin {
        border: 0;
        border-radius: 1rem;
        box-shadow: 0 0.5rem 1rem 0 rgba(0, 0, 0, 0.1);
    }

        .card-signin .card-title {
            margin-bottom: 2rem;
            font-weight: 300;
            font-size: 1.5rem;
        }

        .card-signin .card-body {
            padding: 2rem;
        }

    .form-signin {
        width: 100%;
    }

        .form-signin .btn {
            font-size: 80%;
            border-radius: 5rem;
            letter-spacing: .1rem;
            font-weight: bold;
            padding: 1rem;
            transition: all 0.2s;
        }

    .form-label-group {
        position: relative;
        margin-bottom: 1rem;
    }

        .form-label-group input {
            height: auto;
            border-radius: 2rem;
        }

        .form-label-group > input,
        .form-label-group > label {
            padding: var(--input-padding-y) var(--input-padding-x);
        }

        .form-label-group > label {
            position: absolute;
            top: 0;
            left: 0;
            display: block;
            width: 100%;
            margin-bottom: 0;
            line-height: 1.5;
            color: #495057;
            border: 1px solid transparent;
            border-radius: .25rem;
            transition: all .1s ease-in-out;
        }

        .form-label-group input::-webkit-input-placeholder {
            color: transparent;
        }

        .form-label-group input:-ms-input-placeholder {
            color: transparent;
        }

        .form-label-group input::-ms-input-placeholder {
            color: transparent;
        }

        .form-label-group input::-moz-placeholder {
            color: transparent;
        }

        .form-label-group input::placeholder {
            color: transparent;
        }

        .form-label-group input:not(:placeholder-shown) {
            padding-top: calc(var(--input-padding-y) + var(--input-padding-y) * (2 / 3));
            padding-bottom: calc(var(--input-padding-y) / 3);
        }

            .form-label-group input:not(:placeholder-shown) ~ label {
                padding-top: calc(var(--input-padding-y) / 3);
                padding-bottom: calc(var(--input-padding-y) / 3);
                font-size: 12px;
                color: #777;
            }

    .btn-google {
        color: white;
        background-color: #ea4335;
    }

    .btn-facebook {
        color: white;
        background-color: #3b5998;
    }

    /* Fallback for Edge
    -------------------------------------------------- */

</style>
<br />
<br />
<Animate Animation="Animations.FadeUp" Duration="TimeSpan.FromSeconds(1)">
    <div class="mt-2">
        <div class="container">
            <div class="row">
                <div class="col-sm-9 col-md-7 col-lg-5 mx-auto">
                    <div class="card card-signin my-5">
                        <div class="card-body">
                            <h5 class="card-title text-center fw-bold">ĐĂNG NHẬP HỆ THỐNG</h5>
                            <form class="form-signin">
                                <EditForm Model="@customer" @onsubmit="SubmitForm">
                                    <DataAnnotationsValidator />
                                    <input type="hidden" @bind="customer.CustomerId" />
                                    <div class="form-label-group">
                                        <input type="text" id="inputEmail" @bind="@customer.Email" class="form-control">
                                        <label class="control-label">Địa chỉ Email</label>
                                        <ValidationMessage For="@(() => customer.Email)" />
                                    </div>

                                    <div class="form-label-group">
                                        <input type="text" id="inputFullname" @bind="@customer.FullName" class="form-control">
                                        <label class="control-label">Họ tên</label>
                                        <ValidationMessage For="@(() => customer.FullName)" />
                                    </div>

                                    <div class="form-label-group">
                                        <input type="text" id="inputEmail" @bind="@customer.DoB" class="form-control">
                                        <label class="control-label">Ngày sinh</label>
                                        <ValidationMessage For="@(() => customer.DoB)" />
                                    </div>

                                    <div class="form-label-group">
                                        <input type="text" id="inputEmail" @bind="@customer.Address" class="form-control">
                                        <label class="control-label">Địa chỉ</label>
                                        <ValidationMessage For="@(() => customer.Address)" />
                                    </div>

                                    <div class="form-label-group">
                                        <input type="text" id="inputEmail" @bind="@customer.PhoneNumber" class="form-control">
                                        <label class="control-label">Số điện thoại</label>
                                        <ValidationMessage For="@(() => customer.PhoneNumber)" />
                                    </div>

                                    <div class="d-grid">
                                        <button class="btn btn-lg btn-primary btn-block text-uppercase" type="submit">Lưu</button>
                                        <button class="btn btn-lg btn-danger btn-block text-uppercase" @onclick="@Cancel" value="Thoát"></button>
                                    </div>
                                </EditForm>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</Animate>

@code {
    [Parameter]
    public string id { get; set; }

    protected string imgUrl = "";
    protected string temp = "";
    public Customer customer;

    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrWhiteSpace(id) || id == "0")
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            var apiUrl = config.GetSection("API")["APIUrl"].ToString();
            imgUrl = config.GetSection("API")["ImgUrl"].ToString();
            var accessToken = sessionStorage.GetItem<string>("AccessToken");
            customer = new Customer();
            using (var client = new HttpClient())
            {
                client.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", accessToken);
                client.DefaultRequestHeaders.Add("Access-Control-Allow-Origin", "*");
                client.BaseAddress = new Uri(apiUrl);
                using (var response = await client.GetAsync("Cus/?id=" + id))
                {
                    string apiResponse = await response.Content.ReadAsStringAsync();
                    customer = JsonConvert.DeserializeObject<Customer>(apiResponse);
                }
            }
        }
    }

    private void SubmitForm()
    {

    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/", true);
    }
}
