@page "/register"
@using System.Net;
@using Share.Models;
@using Newtonsoft.Json
@inject IJSRuntime IJSRuntime
@inject Blazored.SessionStorage.ISyncSessionStorageService sessionStorage
@inject Microsoft.Extensions.Configuration.IConfiguration config;
@inject NavigationManager NavigationManager
@layout InnerPageLayout
<style>
    :root {
        --input-padding-x: 1.5rem;
        --input-padding-y: .75rem;
    }

    .card-signin {
        border: 0;
        border-radius: 1rem;
        box-shadow: 0 0.5rem 1rem 0 rgba(0, 0, 0, 0.1);
    }

        .card-signin .card-title {
            margin-bottom: 2rem;
            font-weight: 300;
            font-size: 1.5rem;
        }

        .card-signin .card-body {
            padding: 2rem;
        }

    .form-signin {
        width: 100%;
    }

        .form-signin .btn {
            font-size: 80%;
            border-radius: 5rem;
            letter-spacing: .1rem;
            font-weight: bold;
            padding: 1rem;
            transition: all 0.2s;
        }

    .form-label-group {
        position: relative;
        margin-bottom: 1rem;
    }

        .form-label-group input {
            height: auto;
            border-radius: 2rem;
        }

        .form-label-group > input,
        .form-label-group > label {
            padding: var(--input-padding-y) var(--input-padding-x);
        }

        .form-label-group > label {
            position: absolute;
            top: 0;
            left: 0;
            display: block;
            width: 100%;
            margin-bottom: 0;
            line-height: 1.5;
            color: #495057;
            border: 1px solid transparent;
            border-radius: .25rem;
            transition: all .1s ease-in-out;
        }

        .form-label-group input::-webkit-input-placeholder {
            color: transparent;
        }

        .form-label-group input:-ms-input-placeholder {
            color: transparent;
        }

        .form-label-group input::-ms-input-placeholder {
            color: transparent;
        }

        .form-label-group input::-moz-placeholder {
            color: transparent;
        }

        .form-label-group input::placeholder {
            color: transparent;
        }

        .form-label-group input:not(:placeholder-shown) {
            padding-top: calc(var(--input-padding-y) + var(--input-padding-y) * (2 / 3));
            padding-bottom: calc(var(--input-padding-y) / 3);
        }

            .form-label-group input:not(:placeholder-shown) ~ label {
                padding-top: calc(var(--input-padding-y) / 3);
                padding-bottom: calc(var(--input-padding-y) / 3);
                font-size: 12px;
                color: #777;
            }

    .btn-google {
        color: white;
        background-color: #ea4335;
    }

    .btn-facebook {
        color: white;
        background-color: #3b5998;
    }

    /* Fallback for Edge
    -------------------------------------------------- */

</style>
<br />
<br />
<Animate Animation="Animations.FadeUp" Duration="TimeSpan.FromSeconds(1)">
    <div class="mt-2">
        <div class="container">
            <div class="row">
                <div class="col-sm-9 col-md-7 col-lg-5 mx-auto">
                    <div class="card card-signin my-5">
                        <div class="card-body">
                            <h5 class="card-title text-center fw-bold">ĐĂNG KÝ THÀNH VIÊN</h5>
                                <EditForm Model="@customer" OnValidSubmit="@SubmitForm" class="form-signin">
                                    <DataAnnotationsValidator />
                                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                    <div class="d-grid gap-2">
                                        <button class="btn btn-lg btn-google btn-block text-uppercase" type="submit"><i class="fab fa-google mr-2"></i> Đăng ký bằng Google</button>
                                        <button class="btn btn-lg btn-facebook btn-block text-uppercase" type="submit"><i class="fab fa-facebook-f mr-2"></i> Đăng ký bằng Facebook</button>
                                    </div>
                                    <hr class="my-4">
                                    <h6 class="card-title text-center fw-bold">TẠO TÀI KHOẢN MỚI</h6>
                                    <div class="form-label-group">
                                        <input @bind="customer.Email" type="email" id="inputEmail" class="form-control" placeholder="Địa chỉ mail" required autofocus>
                                        <label for="inputEmail">Địa chỉ mail</label>
                                        <ValidationMessage For="@(() => customer.Email)" />
                                    </div>
                                    <div class="form-label-group">
                                        <input @bind="customer.FullName" type="text" id="inputFullname" class="form-control" placeholder="Họ tên" required>
                                        <label for="inputFullname">Họ tên</label>
                                        <ValidationMessage For="@(() => customer.FullName)" />
                                    </div>
                                    <div class="form-label-group">
                                        <input @bind="customer.DoB" type="date" id="dob" class="form-control" placeholder="Ngày sinh" required>
                                        <label for="dob">Ngày sinh</label>
                                        <ValidationMessage For="@(() => customer.DoB)" />
                                    </div>
                                    <div class="form-label-group">
                                        <input @bind="customer.Address" type="text" id="address" class="form-control" placeholder="Địa chỉ" required>
                                        <label for="address">Địa chỉ</label>
                                        <ValidationMessage For="@(() => customer.Address)" />
                                    </div>
                                    <div class="form-label-group">
                                        <input @bind="customer.PhoneNumber" type="tel" id="phone" class="form-control" placeholder="Số điện thoại" required>
                                        <label for="phone">Số điện thoại</label>
                                        <ValidationMessage For="@(() => customer.PhoneNumber)" />
                                    </div>
                                    <div class="form-label-group">
                                        <input @bind="customer.Password" type="password" id="inputPassword" class="form-control" placeholder="Mật khẩu" required>
                                        <label for="inputPassword">Mật khẩu</label>
                                        <ValidationMessage For="@(() => customer.Password)" />
                                    </div>
                                    <div class="form-label-group">
                                        <input @bind="customer.ConfirmPassword" type="password" id="inputConfirmPassword" class="form-control" placeholder="Xác nhận mật khẩu" required>
                                        <label for="inputConfirmPassword">Xác nhận mật khẩu</label>
                                        <ValidationMessage For="@(() => customer.ConfirmPassword)" />
                                    </div>
                                    <div class="d-grid">
                                        <input value="Đăng ký" type="submit" class="btn btn-lg btn-dark btn-block text-uppercase" />
                                    </div>
                                </EditForm>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</Animate>
@code {
    Share.Models.Customer customer = new Share.Models.Customer();
    private string Tieude = "Đăng ký tài khoản";
    //Life cycle 
    protected override void OnInitialized()
    {
        customer.CreatedDate = DateTime.Now;
        customer.Status = true;
    }
    private async void SubmitForm()
    {
        var apiUrl = config.GetSection("API")["APIUrl"].ToString();
        var accessToken = sessionStorage.GetItem<string>("AccessToken");
        using (var client = new HttpClient())
        {            
            StringContent content = new StringContent(JsonConvert.SerializeObject(customer), System.Text.Encoding.UTF8,
                "application/json");
            client.DefaultRequestHeaders.Add("Access-Control-Alow-Origin", "*");
            HttpResponseMessage response = await client.PostAsync(apiUrl + "customer", content);

            if (response.StatusCode != HttpStatusCode.OK)
            {

            }
            else
            {
                string apiResponse = await response.Content.ReadAsStringAsync();
                if (apiResponse == "-1")
                {

                }
                else
                {
                    NavigationManager.NavigateTo("/");
                }
            }
        }
    }
}
