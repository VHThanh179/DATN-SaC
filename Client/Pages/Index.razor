@page "/"
@using Share.Models
@using Share.Models.ViewModels
@using Blazored.Toast
@using Blazored.Toast.Services
@using Newtonsoft.Json
@layout WebLayout
@inject Blazored.SessionStorage.ISyncSessionStorageService sessionStorage
@inject Microsoft.Extensions.Configuration.IConfiguration config
@inject IToastService toastService
@inject Microsoft.JSInterop.IJSRuntime JSRuntime;
@functions{
    protected async override Task OnAfterRenderAsync(bool fistRender)
    {
        if (fistRender)
        {
            await JSRuntime.InvokeAsync<object>("initializeCarousel");
            fistRender = false;
        }
    }
}
<link href="/assets/css/products.css" rel="stylesheet" />
<style>
    .carousel-inner img {
        width: 100%;
    }

    .card {
        background-color: #fff;
        border: none;
        border-radius: 10px;
        width: auto;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
        margin-bottom: 20px;
        height: 450px;
    }

        .card:hover {
            border: solid;
            border-color: black;
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)
        }

    .image-container {
        position: relative;
        text-align: center;
    }

    .product-detail-container {
        position: relative;
    }

    .thumbnail-image {
        border-radius: 10px !important;
    }

    .discount {
        background-color: red;
        padding-top: 1px;
        padding-bottom: 1px;
        padding-left: 4px;
        padding-right: 4px;
        border-radius: 6px;
        color: #fff
    }

    .wishlist {
        height: 25px;
        width: 25px;
        background-color: #eee;
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 50%;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)
    }

    .first {
        position: absolute;
        width: 100%;
        padding: 9px
    }

    .dress-name {
        font-weight: bold;
        width: 100%;
    }

    .new-price {
        font-size: 18px;
        font-weight: bold;
        color: red
    }

    .old-price {
        font-weight: bold;
        color: grey
    }

    .rating-number {
        color: grey
    }
</style>
<br />
<br />
<br />
<Animate Animation="Animations.FadeUp" Duration="TimeSpan.FromSeconds(1)">

    <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
        <div class="carousel-inner">
            <div class="carousel-item active">
                <img src="/assets/img/BANNER-BALO-2.jpg" class="d-block w-100" alt="Image1">
            </div>
            <div class="carousel-item">
                <img src="/assets/img/BANNER-BALO-8.jpg" class="d-block w-100" alt="Image2">
            </div>
            <div class="carousel-item">
                <img src="/assets/img/BANNER-BALO-3.jpg" class="d-block w-100" alt="Image3">
            </div>
        </div>
        <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="sr-only">Trước</span>
        </a>
        <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="sr-only">Sau</span>
        </a>
    </div>
</Animate>

<br /> <br />
       <Animate Animation="Animations.FadeUp" Duration="TimeSpan.FromSeconds(1)">
           <!-- Start Product Area -->
           <div class="product-area section">
               <div class="container">
                   <div class="row">
                       <div class="col-12">
                           <div class="section-title">
                               <h2>Sản Phẩm Bán Chạy</h2>
                               <hr />
                           </div>
                       </div>
                       <div class="col-12">
                           <div class="product-info">
                               <div class="tab-content" id="myTabContent">
                                   <!-- Start Single Tab -->
                                   <div class="tab-single">
                                       <!--Product Slider-->
                                       <ul id="autoWidth" class="cs-hidden">
                                           @{var stt = 0;
                                               foreach (var item in products)
                                               {
                                                   <li class="item-@stt.ToString()">
                                                       <div class="box">
                                                           <div class="slide-img">
                                                               @{
                                                                   temp = imgUrl + item.Image;
                                                               }
                                                               <img src="@temp" alt="1">
                                                               <div class="overlay">
                                                                   <a class="buy-btn" style="cursor:pointer" @onclick="() => AddCart(item.ProductId)">MUA NGAY</a>
                                                               </div>
                                                           </div>
                                                           <div class="detail-box">
                                                               <div class="type">
                                                                   <a style="cursor:pointer" href="/detail/@item.ProductId">@item.ProductName</a>
                                                                   @if (item.Category == Category.Backpack)
                                                                   {
                                                                       <span>Ba lô</span>
                                                                   }
                                                                   else
                                                                   {
                                                                       <span>Phụ kiện</span>
                                                                   }
                                                               </div>
                                                               <a href="/detail/@item.ProductId" class="price">
                                                                   <b>@string.Format("{0:#,0}", item.Price)đ</b>
                                                               </a>
                                                           </div>
                                                       </div>
                                                   </li>
                                                   stt++;
                                               }
                                           }

                                       </ul>
                                       <!--End Product Slider-->
                                </div>
                            </div>                           
                        </div>
                    </div>
                </div>

            </div>
        </div>
        <!-- End Portfolio Section -->

       </Animate>
<Animate Animation="Animations.FadeUp" Duration="TimeSpan.FromSeconds(1)">
    <!-- ======= Services Section ======= -->
    <section id="services" class="services section-bg">
        <div class="container">

            <div class="section-title" data-aos="fade-up">
                <h2>Dịch vụ</h2>
                <p>Đến với dịch vụ của chúng tôi, quý khách sẽ được chọn những chiếc Balo & Phụ kiện chất lượng và mới nhất từ các nhà phân phối uy tín</p>
            </div>

            <div class="row">
                <div class="col-md-6 col-lg-3 d-flex align-items-stretch mb-5 mb-lg-0" data-aos="zoom-in">
                    <div class="icon-box icon-box-pink">
                        <div class="icon"><i class="bx bxl-shopify"></i></div>
                        <h4 class="title"><a href="">Sản phẩm chất lượng</a></h4>
                        <p class="description">SaC Backpack - nơi mua sắm cặp balo, túi xách, phụ kiện lý tưởng của nhiều bạn trẻ, là sự lựa chọn hoàn hảo dành cho bạn. </p>
                    </div>
                </div>

                <div class="col-md-6 col-lg-3 d-flex align-items-stretch mb-5 mb-lg-0" data-aos="zoom-in" data-aos-delay="100">
                    <div class="icon-box icon-box-cyan">
                        <div class="icon"><i class="bx bx-transfer-alt"></i></div>
                        <h4 class="title"><a href="">Giao hàng cực nhanh</a></h4>
                        <p class="description">Giao hàng trên toàn quốc cam kết đi hàng ngay khi nhận được đơn</p>
                    </div>
                </div>

                <div class="col-md-6 col-lg-3 d-flex align-items-stretch mb-5 mb-lg-0" data-aos="zoom-in" data-aos-delay="200">
                    <div class="icon-box icon-box-green">
                        <div class="icon"><i class="bx bx-dollar"></i></div>
                        <h4 class="title"><a href="">Giá cả phải chăng</a></h4>
                        <p class="description">Đến với SaC Backpack bạn có thể thoải mái lựa chọn những chiếc Balo & phụ kiện với giá cực rẻ</p>
                    </div>
                </div>

                <div class="col-md-6 col-lg-3 d-flex align-items-stretch mb-5 mb-lg-0" data-aos="zoom-in" data-aos-delay="300">
                    <div class="icon-box icon-box-blue">
                        <div class="icon"><i class="bx bxs-backpack"></i></div>
                        <h4 class="title"><a href="">Nhẹ nhàng thoải mái</a></h4>
                        <p class="description">Thiết kế chú trọng tới sự thoải mái và thời trang, sành điệu. </p>
                    </div>
                </div>

            </div>

        </div>
    </section><!-- End Services Section -->
</Animate>
<Animate Animation="Animations.FadeUp" Duration="TimeSpan.FromSeconds(1)" Delay="TimeSpan.FromSeconds(0.5)">
    <!-- ======= Contact Section ======= -->
    <section id="contact" class="contact section-bg">
        <div class="container">

            <div class="section-title" data-aos="fade-up">
                <h2>Liên hệ với chúng tôi</h2>
            </div>

            <div class="row">

                <div class="col-lg-12 d-flex align-items-stretch" data-aos="fade-right">
                    <div class="info">
                        <div class="address">
                            <i class="bi bi-geo-alt"></i>
                            <h4>Địa chỉ:</h4>
                            <p>CVPM Quang Trung, Quận 12, TP HCM</p>
                        </div>

                        <div class="email">
                            <i class="bi bi-envelope"></i>
                            <h4>Email:</h4>
                            <p>web.sacbackpack@gmail.com</p>
                        </div>

                        <div class="phone">
                            <i class="bi bi-phone"></i>
                            <h4>Số điện thoại:</h4>
                            <p>033 278 0105</p>
                        </div>
                        <iframe src="https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d15673.776858806688!2d106.6283556!3d10.8537789!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3175298945afff59%3A0xcf4afe79d65f5ddc!2zQ8O0bmcgdmnDqm4gcGjhuqduIG3hu4FtIFF1YW5nIFRydW5n!5e0!3m2!1svi!2s!4v1639199322451!5m2!1svi!2s" frameborder="0" style="border:0; width: 100%; height: 290px;" allowfullscreen></iframe>
                    </div>

                </div>

            </div>

        </div>
    </section><!-- End Contact Section -->
</Animate>


@code{
    private ToastParameters _toastParameters;
    public List<Product> products;
    protected string imgUrl = "";
    protected string temp = "";

    protected override async Task OnInitializedAsync()
    {
        var apiUrl = config.GetSection("API")["APIUrl"].ToString();
        imgUrl = config.GetSection("API")["ImgUrl"].ToString();

        products = new List<Product>();
        using (var client = new HttpClient())
        {
            //client.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", accessToken);
            client.DefaultRequestHeaders.Add("Access-Control-Allow-Origin", "*");
            client.BaseAddress = new Uri(apiUrl);
            using (var response = await client.GetAsync("TrendingProducts"))
            {
                string apiResponse = await response.Content.ReadAsStringAsync();
                products = Newtonsoft.Json.JsonConvert.DeserializeObject<List<Product>>(apiResponse);
            }
        }
        await JSRuntime.InvokeVoidAsync("jqueryScript");
        await JSRuntime.InvokeVoidAsync("mostPopular");
        await JSRuntime.InvokeVoidAsync("productSlider");
    }

    private void AddCart(int id)
    {
        _toastParameters = new ToastParameters();
        //var cart = HttpContext.Session.GetString("cart");//get key cart
        var cart = sessionStorage.GetItem<string>("cart");//get key cart
        if (cart == null)
        {
            var product = products.Where(u => u.ProductId == id).FirstOrDefault();
            List<CartItem> listCart = new List<CartItem>()
{
                    new CartItem
                    {
                        product = product,
                        Quantity = 1,
                        Price = product.Price
                    }
            };
            Cart orderCart = new Cart()
            {
                ListViewCart = listCart,
                Total = Calculate(listCart)
            };

            sessionStorage.SetItem("cart", JsonConvert.SerializeObject(orderCart));
            _toastParameters.Add(nameof(Notification.Title), "Thêm sản phẩm thành công!");
            _toastParameters.Add(nameof(Notification.IsSuccess), true);
            toastService.ShowToast<Notification>(_toastParameters);
            //HttpContext.Session.SetString("cart", JsonConvert.SerializeObject(listCart));
        }
        else
        {
            var product = products.Where(u => u.ProductId == id).FirstOrDefault();
            Cart orderCart = JsonConvert.DeserializeObject<Cart>(cart);
            bool check = true;
            for (int i = 0; i < orderCart.ListViewCart.Count; i++)
            {
                if (orderCart.ListViewCart[i].product.ProductId == id)
                {
                    orderCart.ListViewCart[i].Quantity++;
                    orderCart.ListViewCart[i].Price = product.Price * orderCart.ListViewCart[i].Quantity;
                    check = false;
                }
            }

            if (check)
            {
                orderCart.ListViewCart.Add(new CartItem
                {
                    product = product,
                    Quantity = 1,
                    Price = product.Price * 1
                });
            }
            orderCart.Total = Calculate(orderCart.ListViewCart);
            sessionStorage.SetItem("cart", JsonConvert.SerializeObject(orderCart));
            _toastParameters.Add(nameof(Notification.Title), "Thêm sản phẩm thành công!");
            _toastParameters.Add(nameof(Notification.IsSuccess), true);
            toastService.ShowToast<Notification>(_toastParameters);
            //HttpContext.Session.SetString("cart", JsonConvert.SerializeObject(dataCart));
        }

    }

    private float Calculate(List<CartItem> listCart)
    {
        float total = 0;
        if (listCart != null)
        {
            for (int i = 0; i < listCart.Count; i++)
            {
                total += listCart[i].Price;
            }
        }
        return total;
    }
}

