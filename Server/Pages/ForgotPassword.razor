@page "/forgotPassword"
@using Blazored.Toast
@using Blazored.Toast.Services
@inject NavigationManager NavigationManager
@layout LoginLayout
@inject Share.Interfaces.IMailSvc _mailSvc
@inject Share.Interfaces.IUserSvc _userSvc
@inject Share.Interfaces.IEncodeHelper _encodeHelper
@inject IToastService toastService

@attribute [AllowAnonymous]

<style>
    #button {
        background-color: #009688;
        border: none;
        border-radius: 5px;
        color: #FFFFFF;
        font-weight: 700;
        width: 60px;
    }

    .e-popup.e-popup-open.e-dialog {
        border-radius: 20px;
    }

    .e-dialog .e-dlg-header-content {
        background-color: #689F38;
        border-radius: 20px 20px 0px 0px;
    }

        .e-dialog .e-dlg-header-content + .e-dlg-content {
            padding: 0;
        }

    .e-dialog .e-dlg-header {
        position: relative;
        font-size: 25px;
        font-weight: bold;
        color: linen;
        margin-left: 10px;
    }

    .e-dialog .e-footer-content {
        padding: 15px;
        border-radius: 0px 0px 20px 20px;
    }

    .e-dialog .e-dlg-header-content {
        padding: 6px;
    }

    .dialogText {
        color: #33691E;
        font-size: 20px;
        margin: 32px;
        font-weight: 700;
    }

    .e-dialog .e-dlg-header-content .e-btn.e-dlg-closeicon-btn {
        margin-right: 10px;
    }

    .e-dialog .e-dlg-header-content .e-icon-dlg-close {
        color: #FFFFFF;
        margin-top: 10px;
    }

    .e-dlg-header, .e-dlg-header * {
        color: #FFFFFF;
    }
</style>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-xl-10 col-lg-12 col-md-9">
            <div class="card o-hidden border-0 shadow-lg my-5">
                <div class="card-body p-0">
                    <div class="row">
                        <div class="col-lg-6 d-none d-lg-block bg-login-image"></div>
                        <div class="col-lg-6">
                            <div class="p-5">
                                <div class="text-center">
                                    <h1 class="h4 text-gray-900 mb-4">Quên mật khẩu?</h1>
                                </div>
                                <form class="user" @onsubmit="@(m => ForgotPass(email))">
                                    <div class="form-group">
                                        <input type="email" class="form-control form-control-user"
                                               id="email" @bind="@email" aria-describedby="emailHelp" placeholder="Email"
                                               required autofocus>
                                    </div>
                                    <button class="btn btn-primary btn-user btn-block" type="submit">Quên mật khẩu</button>
                                </form>
                                <hr>
                                <div class="text-center">
                                    <a class="small" href="/login?returnUrl=/">Đăng nhập</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<SfDialog Width="509px" Height="220px" IsModal="true" ShowCloseIcon="true" @bind-Visible="IsVisible">
    <DialogTemplates>
        <Header><i class="fa fa-check"></i> Thông báo!</Header>
        <Content>
            <h1 class="dialogText">Mật khẩu mới đã được gửi đến Email của bạn, vui lòng kiểm tra Email!</h1>
        </Content>
        <FooterTemplate>
            <button id="button" @onclick="@Confirm" class="e-control e-btn" data-ripple="true">OK</button>
        </FooterTemplate>
    </DialogTemplates>
    <DialogAnimationSettings Effect="DialogEffect.FlipXDown" Duration=600 />
</SfDialog>
@code{
    public string email = "";
    private Share.Models.User user { get; set; }
    private ToastParameters _toastParameters;

    private void ForgotPass(string mail)
    {
        _toastParameters = new ToastParameters();
        Random random = new Random();
        if (mail != "")
        {
            if (_userSvc.CheckEmail(mail))
            {
                user = _userSvc.GetUserbyMail(email);
                var pass = random.Next(100, 300).ToString();
                _mailSvc.SendEmailAsync(mail, pass);
                user.Password = pass;
                _userSvc.EditUserbyMail(user.UserId, user);
                //_toastParameters.Add(nameof(Notification.Title), "Mật khẩu mới đã được gửi đến Email của bạn, vui lòng kiểm tra Email!");
                //_toastParameters.Add(nameof(Notification.IsSuccess), true);
                //toastService.ShowToast<Notification>(_toastParameters);
                OpenDialog();
            }
            else
            {
                _toastParameters.Add(nameof(Notification.Title), "Email không tồn tại vui lòng nhập lại email!");
                _toastParameters.Add(nameof(Notification.IsSuccess), false);
                toastService.ShowToast<Notification>(_toastParameters);
            }
        }
    }

    private bool IsVisible { get; set; }

    private void OpenDialog()
    {
        IsVisible = true;
    }

    private void Confirm()
    {
        NavigationManager.NavigateTo("/logout?returnUrl=/", true);
    }
}