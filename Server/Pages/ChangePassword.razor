@page "/changepass"
@layout MainLayout
@inject Share.Interfaces.IUserSvc _userService
@inject Share.Interfaces.IEncodeHelper _encodeHelper
@inject NavigationManager navigationManager
@inject IToastService toastService
@using Share.Models
@using System.Security.Claims
@using Blazored.Toast
@using Blazored.Toast.Services

<style>
    #button {
        background-color: #009688;
        border: none;
        border-radius: 5px;
        color: #FFFFFF;
        font-weight: 700;
        width: 60px;
    }

    .e-popup.e-popup-open.e-dialog {
        border-radius: 20px;
    }

    .e-dialog .e-dlg-header-content {
        background-color: #689F38;
        border-radius: 20px 20px 0px 0px;
    }

        .e-dialog .e-dlg-header-content + .e-dlg-content {
            padding: 0;
        }

    .e-dialog .e-dlg-header {
        position: relative;
        font-size: 25px;
        font-weight: bold;
        color: linen;
        margin-left: 10px;
    }

    .e-dialog .e-footer-content {
        padding: 15px;
        border-radius: 0px 0px 20px 20px;
    }

    .e-dialog .e-dlg-header-content {
        padding: 6px;
    }

    .dialogText {
        color: #33691E;
        font-size: 20px;
        margin: 44px 19px;
        font-weight: 700;
    }

    .e-dialog .e-dlg-header-content .e-btn.e-dlg-closeicon-btn {
        margin-right: 10px;
    }

    .e-dialog .e-dlg-header-content .e-icon-dlg-close {
        color: #FFFFFF;
        margin-top: 10px;
    }

    .e-dlg-header, .e-dlg-header * {
        color: #FFFFFF;
    }
</style>
<div class="container mt-5">
    <div class="row">
        <div class="col-6 mx-auto">
            <div class="card card-signin flex-row shadow-lg card-signup">
                <div class="card-body">
                    <h2 class="card-title text-center font-weight-bold text-uppercase">ĐỔI MẬT KHẨU</h2>
                    <div class="col-md-12">
                        <form @onsubmit="ChangePass">
                            <div class="form-label-group mt-3">
                                <label class="control-label">Mật khẩu cũ</label>
                                <input type="password" class="form-control" @bind="oldPass" required autofocus />
                            </div>

                            <div class="form-label-group mt-3">
                                <label class="control-label">Mật khẩu mới</label>
                                <input type="password" class="form-control" @bind="newPass" required />
                            </div>

                            <div class="form-label-group mt-3">
                                <label class="control-label">Nhập lại mật khẩu</label>
                                <input type="password" class="form-control" @bind="confirmPass" required />
                            </div>
                            <div class="form-label-group mt-3">
                                <button class="btn btn-info" type="submit">Đổi mật khẩu</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<SfDialog Width="509px" Height="220px" IsModal="true" ShowCloseIcon="true" @bind-Visible="IsVisible">
    <DialogTemplates>
        <Header><i class="fa fa-check"></i> Thông báo</Header>
        <Content>
            <h1 class="dialogText">Đổi mật khẩu thành công, vui lòng đăng nhập lại!</h1>
        </Content>
        <FooterTemplate>
            <button id="button" @onclick="@Confirm" class="e-control e-btn" data-ripple="true">OK</button>
        </FooterTemplate>
    </DialogTemplates>
    <DialogAnimationSettings Effect="DialogEffect.FlipXDown" Duration=600 />
</SfDialog>

@code {
    public string oldPass, newPass, confirmPass;
    private ToastParameters _toastParameters;

    [CascadingParameter] protected Task<AuthenticationState> AuthStat { get; set; }
    string id;
    User user = new User();
    protected override void OnInitialized()
    {
        id = AuthStat.Result.User.FindFirst(ClaimTypes.NameIdentifier).Value;
        user = _userService.GetUser(int.Parse(id));
    }

    public void ChangePass()
    {
        _toastParameters = new ToastParameters();
        if (!string.IsNullOrEmpty(oldPass) || !string.IsNullOrEmpty(newPass) || !string.IsNullOrEmpty(confirmPass))
        {
            if (string.Equals(user.Password, _encodeHelper.Encode(oldPass)))
            {
                if (string.Equals(newPass, confirmPass))
                {
                    user.Password = _encodeHelper.Encode(newPass);
                    user.ConfirmPass = user.Password;
                    int ret = _userService.EditUser(int.Parse(id), user);
                    if (ret == int.Parse(id))
                    {
                        //_toastParameters.Add(nameof(Notification.Title), "Đổi mật khẩu thành công, vui lòng đăng nhập lại!");
                        //_toastParameters.Add(nameof(Notification.IsSuccess), true);
                        //toastService.ShowToast<Notification>(_toastParameters);
                        //navigationManager.NavigateTo("/logout?returnUrl=/", true);
                        OpenDialog();
                    }
                    else
                    {
                        _toastParameters.Add(nameof(Notification.Title), "Đổi mật khẩu thất bại!");
                        _toastParameters.Add(nameof(Notification.IsSuccess), false);
                        toastService.ShowToast<Notification>(_toastParameters);
                    }

                }
                else
                {
                    _toastParameters.Add(nameof(Notification.Title), "Mật khẩu mới và xác nhận mật khẩu mới không khớp!");
                    _toastParameters.Add(nameof(Notification.IsSuccess), false);
                    toastService.ShowToast<Notification>(_toastParameters);
                }
            }
            else
            {
                _toastParameters.Add(nameof(Notification.Title), "Mật khẩu cũ không đúng!");
                _toastParameters.Add(nameof(Notification.IsSuccess), false);
                toastService.ShowToast<Notification>(_toastParameters);
            }
        }

    }

    private bool IsVisible { get; set; }

    private void OpenDialog()
    {
        IsVisible = true;
    }

    private void Confirm()
    {
        navigationManager.NavigateTo("/logout?returnUrl=/", true);
    }
}
