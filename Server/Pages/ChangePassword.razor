@page "/changepass"
@layout MainLayout
@inject Share.Interfaces.IUserSvc _userService
@inject Share.Interfaces.IEncodeHelper _encodeHelper
@inject NavigationManager navigationManager
@using Share.Models
@using System.Security.Claims

<div class="container mt-5">
    <div class="row">
        <div class="col-6 mx-auto">
            <div class="card card-signin flex-row shadow-lg card-signup">
                <div class="card-body">
                    <h2 class="card-title text-center font-weight-bold text-uppercase">ĐỔI MẬT KHẨU</h2>
                    <div class="col-md-12">
                        <form>
                            <div class="form-label-group mt-3">
                                <label class="control-label">Mật khẩu cũ</label>
                                <input type="password" class="form-control" @bind="oldPass" required autofocus/>
                            </div>

                            <div class="form-label-group mt-3">
                                <label class="control-label">Mật khẩu mới</label>
                                <input type="password" class="form-control" @bind="newPass" required/>
                            </div>

                            <div class="form-label-group mt-3">
                                <label class="control-label">Nhập lại mật khẩu</label>
                                <input type="password" class="form-control" @bind="confirmPass" required/>
                            </div>
                            <div class="form-label-group mt-3">
                                <button class="btn btn-info" @onclick="ChangePass">Đổi mật khẩu</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@code {
    public string oldPass, newPass, confirmPass;

    [CascadingParameter] protected Task<AuthenticationState> AuthStat { get; set; }
    string id;
    User user = new User();
    protected override void OnInitialized()
    {
        id = AuthStat.Result.User.FindFirst(ClaimTypes.NameIdentifier).Value;
        user = _userService.GetUser(int.Parse(id));
    }

    public void ChangePass()
    {
        if (!string.IsNullOrEmpty(oldPass) || !string.IsNullOrEmpty(newPass) || !string.IsNullOrEmpty(confirmPass))
        {
            if (string.Equals(user.Password, _encodeHelper.Encode(oldPass)))
            {
                if (string.Equals(newPass, confirmPass))
                {
                    user.Password = _encodeHelper.Encode(newPass);
                    user.ConfirmPass = user.Password;
                    _userService.EditUser(int.Parse(id), user);
                    navigationManager.NavigateTo("/logout?returnUrl=/", true);
                }
            }
        }

    }
}
