// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Server.Pages.Users
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\DATN\Project\SaCBackpack\Server\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\DATN\Project\SaCBackpack\Server\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\DATN\Project\SaCBackpack\Server\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\DATN\Project\SaCBackpack\Server\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\DATN\Project\SaCBackpack\Server\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\DATN\Project\SaCBackpack\Server\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\DATN\Project\SaCBackpack\Server\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\DATN\Project\SaCBackpack\Server\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\DATN\Project\SaCBackpack\Server\_Imports.razor"
using Server;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\DATN\Project\SaCBackpack\Server\_Imports.razor"
using Server.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\DATN\Project\SaCBackpack\Server\_Imports.razor"
using Syncfusion.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\DATN\Project\SaCBackpack\Server\_Imports.razor"
using Syncfusion.Blazor.Charts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "D:\DATN\Project\SaCBackpack\Server\_Imports.razor"
using Blazored;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "D:\DATN\Project\SaCBackpack\Server\_Imports.razor"
using Blazored.Modal;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "D:\DATN\Project\SaCBackpack\Server\_Imports.razor"
using Blazored.Modal.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\DATN\Project\SaCBackpack\Server\Pages\Users\UserList.razor"
using Share.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\DATN\Project\SaCBackpack\Server\Pages\Users\UserList.razor"
using Share.Helpers;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.LayoutAttribute(typeof(MainLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/userlist")]
    public partial class UserList : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 80 "D:\DATN\Project\SaCBackpack\Server\Pages\Users\UserList.razor"
       
    private string searchValue;
    public string SearchString { get; set; }
    int ids = 0;
    public List<User> users;

    //protected override void OnParametersSet()
    //{
    //    if (!string.IsNullOrEmpty(SearchString))
    //    {
    //        users = _userService.GetAllUser().Where(x => x.UserName.ToUpper().Contains(SearchString.ToUpper())).ToList();
    //    }
    //    else
    //    {
    //        users = _userService.GetAllUser();
    //    }
    //}

    protected void SearchInfo(ChangeEventArgs args)
    {
        SearchString = args.Value.ToString();
        if (!string.IsNullOrEmpty(SearchString))
        {
            users = _userService.GetAllUser().Where(x => x.UserName.ToUpper().Contains(SearchString.ToUpper())
            || x.FullName.ToUpper().Contains(SearchString.ToUpper()) || x.Email.ToUpper().Contains(SearchString.ToUpper())
            || x.DoB.ToString().Contains(SearchString)).ToList();
        }
        else
        {
            users = _userService.GetAllUser();
        }
    }

    protected void UserSorting(string SortColumn)
    {
        users = _userService.GetAllUser();
        if (ids == 0)
        {
            ids = 1;
            switch (SortColumn)
            {
                case "UserName":
                    users = users.OrderBy(x => x.UserName).ToList();
                    break;
                case "FullName":
                    users = users.OrderBy(x => x.FullName).ToList();
                    break;
                case "Email":
                    users = users.OrderBy(x => x.Email).ToList();
                    break;
                case "DoB":
                    users = users.OrderBy(x => x.DoB).ToList();
                    break;
                case "Roles":
                    users = users.OrderBy(x => x.Roles).ToList();
                    break;
                case "Status":
                    users = users.OrderBy(x => x.Status).ToList();
                    break;
            }
        }
        else
        {
            ids = 0;

            switch (SortColumn)
            {
                case "UserName":
                    users = users.OrderByDescending(x => x.UserName).ToList();
                    break;
                case "FullName":
                    users = users.OrderByDescending(x => x.FullName).ToList();
                    break;
                case "Email":
                    users = users.OrderByDescending(x => x.Email).ToList();
                    break;
                case "DoB":
                    users = users.OrderByDescending(x => x.DoB).ToList();
                    break;
                case "Roles":
                    users = users.OrderByDescending(x => x.Roles).ToList();
                    break;
                case "Status":
                    users = users.OrderByDescending(x => x.Status).ToList();
                    break;
            }
        }
    }

    protected override void OnInitialized()
    {
        users = _userService.GetAllUser();
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Share.Interfaces.IUserSvc _userService { get; set; }
    }
}
#pragma warning restore 1591
